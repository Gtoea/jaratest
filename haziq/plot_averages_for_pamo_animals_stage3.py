
"""
Plot psychmetric curve for an animal trained with the fm_discrimination paradigm.
"""

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
import statistics as st
from jaratoolbox import loadbehavior
from jaratoolbox import behavioranalysis
from jaratoolbox import extraplots

subject = ['pamo009', 'pamo010', 'pamo011', 'pamo012',
           'pamo013', 'pamo014', 'pamo015', 'pamo016',
           'pamo017', 'pamo018', 'pamo019', 'pamo020',
           'pamo021', 'pamo022', 'pamo023', 'pamo024',
           'pamo025', 'pamo026']
paradigm = '2afc'
J009 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J010 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J011 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J012 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J013 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J014 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J015 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J016 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a','20220228a']
J017 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J018 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a','20220228a']
J019 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a','20220228a','20220301a','20220302a',
       '20220303a','20220304a','20220305a','20220306a','20220307a',
       '20220308a','20220309a','20220310a','20220311a','20220312a',
       '20220313a','20220314a','20220315a','20220316a','20220317a',
       '20220318a','20220319a','20220320a','20220321a','20220322a',]
J020 = ['20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J021 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J022 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J023 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J024 = ['20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J025 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
J026 = ['20220201a','20220202a','20220203a','20220204a','20220205a',
       '20220206a','20220207a','20220208a','20220209a','20220210a',
       '20220211a','20220212a','20220213a','20220214a','20220215a',
       '20220216a','20220217a','20220218a','20220219a','20220220a',
       '20220221a','20220222a','20220223a','20220224a','20220225a',
       '20220226a','20220227a']
sessions=[J009,J010,J011,J012,J013,J014,J015,J016,J017,J018,J019,J020,J021,J022,J023,J024,J025,J026]

avg_performance = []
multiple_avg_perf= []
n=0
for y in subject:
#    print (y)
    avg_performance = []
#    print (sessions[n])
    for x in sessions[n]:
        behavFile = loadbehavior.path_to_behavior_data(y, paradigm, x)
        bdata = loadbehavior.BehaviorData(behavFile)
        correct_trials_count = np.count_nonzero(bdata['outcome'] == bdata.labels['outcome']['correct']) #no of correct trials type int
        valid_trials_count = np.count_nonzero(bdata['valid'] == True)  #no of valid trials type int    
        average_performance = (correct_trials_count/valid_trials_count)*100 # type float
        #print("The avarage performance for "+ str (y) + " on"+ str(x) + "is " + str("{:.2f}".format(average_performance)) +" %.")
        avg_performance.append(float("{:.2f}".format(average_performance))) # type list
    multiple_avg_perf.append(avg_performance) # list with in list
    n += 1 
#print (multiple_avg_perf)


#for grp in subject:
#    print (grp)
l=0
for z in multiple_avg_perf:
    print (z)
    x = len(z)
    lst = list(range(1,x+1)) 
#    print (x)
    plt.figure()
    plt.plot(lst,z, 'k-o')
    plt.ylim(20, 100)
    plt.xlim(0, x)
    plt.xticks(np.arange(1, x+1, step=1))
#    plt.xticks(range(x), ['',AP_group[0], AP_group[1], AP_group[2], AP_group[3], AP_group[4], AP_group[5], AP_group[6], AP_group[7], AP_group[8]], rotation = 90 )
    plt.xlabel("Days")
    plt.ylabel("Performance in percentage")
    plt.title("Average performance of " + subject[l]+" at stage 3 ")
    plt.grid(axis = 'x')
    plt.show()
    l += 1
        
